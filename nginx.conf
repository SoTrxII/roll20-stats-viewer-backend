
user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/json;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;
    gzip  on;
    gzip_http_version 1.0;
    gzip_types    text/plain application/json application/x-javascript text/javascript text/xml text/css;
    #include /etc/nginx/conf.d/*.conf;
    server {
        location / {

        if ($request_method = OPTIONS ) {
          add_header "Access-Control-Allow-Origin"  * always;
          add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD, DELETE, PATCH" always;
          add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept, If-Modified-Since, Cache-Control" always;
          add_header "Access-Control-Max-Age" 86400 always;
          return 200;
        }
        if ($request_method ~* "(GET|POST)") {
          add_header "Access-Control-Allow-Origin"  * always;
          add_header 'Access-Control-Allow-Methods' '*' always;
          add_header 'Access-Control-Allow-Headers' '*' always;
        }
          proxy_pass http://localhost:8089;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection 'upgrade';
          proxy_set_header Host $host;
          proxy_cache_bypass $http_upgrade;
        }
    }
}


